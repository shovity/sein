(()=>{var e={41:()=>{Array.prototype.sum=function(){return this.reduce(((e,t)=>e+t))},HTMLElement.prototype.addClass=function(e){new RegExp(`^${e}$|^${e} | ${e}$| ${e}( )`,"g").test(this.className)||(this.className=`${this.className} ${e}`.trim())},HTMLElement.prototype.removeClass=function(e){const t=new RegExp(`^${e}$|^${e} | ${e}$| ${e}( )`,"g");this.className=this.className.replace(t,"$1").trim()},HTMLCollection.prototype.toArray=function(){return[...this]},NodeList.prototype.toArray=function(){return[...this]}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}(()=>{"use strict";n(41);const e=["debug","info","warning","error"],t={log_level:"debug",get debug(){return e.indexOf(this.log_level.toLowerCase())<=e.indexOf("debug")?console.debug.bind(window.console,"%cDEBUG  :","color: #6c757d"):()=>{}},get info(){return e.indexOf(this.log_level.toLowerCase())<=e.indexOf("info")?console.info.bind(window.console,"%cINFO   :","color: #17a2b8"):()=>{}},get warning(){return e.indexOf(this.log_level.toLowerCase())<=e.indexOf("warning")?console.warn.bind(window.console,"%cWARNING:","color: #ffc107"):()=>{}},get error(){return e.indexOf(this.log_level.toLowerCase())<=e.indexOf("error")?console.error.bind(window.error,"%cERROR  :","color: #dc3545"):()=>{}}},o=new Proxy({},{get:(e,n)=>{if("origin"===n)return e;const o=window.localStorage[n];try{return o&&JSON.parse(o)}catch(e){return t.error("storage: Parse json fail, key: ",n)}},set:(e,t,n)=>(window.localStorage[t]=JSON.stringify(n),e[t]=n,!0)}),r={default:{wallpapers:[{url:"img/w0.jpg",video:0,active:!0},{url:"img/w1.jpg",video:1},{url:"img/w2.jpg",video:2}],local:{wallpaper_videos_0:"video/w0.mp4",wallpaper_videos_1:"video/w1.mp4",wallpaper_videos_2:"video/w2.mp4"}},init:()=>{const e=r.default.wallpapers;return chrome.storage.local.set({...r.default.local,wallpapers:e.concat(Array(9).fill({url:"img/placeholder.png",editbale:!0}))}),r.cache(e)},cache:e=>{try{const t=e.filter((e=>e.active));return o.wallpapers=t,t}catch(e){throw alert("The value of wallpapers exceeded the quota"),e}},boot:()=>{const e=o.wallpapers||r.init(),t=e[Math.floor(Math.random()*e.length)];window.wall.style.backgroundImage=`url(${t.url})`,t.video>-1&&setTimeout((()=>{const e=`wallpaper_videos_${t.video}`;chrome.storage.local.get(e,(t=>{const n=document.createElement("source");n.src=t[e],n.type="video/mp4",window.wall_video.appendChild(n)}))}))}},i=r,a={pool:{},emit:(e,...t)=>{for(const n of a.pool[e]??[])n(...t)},on:(e,t)=>{a.pool[e]?.push(t)||(a.pool[e]=[t])},next:(e,...t)=>{setTimeout(a.emit,0,e,...t)}},s=a,l={mounted:{},gen:(e,n)=>{if(l[e]||!/^[a-zA-Z][a-zA-Z0-9_]{0,63}$/.test(e))return t.error(`emitter: Name "${e}" existed or invalid`);l[e]=()=>{if(l.mounted[e])return t.error(`emitter: Duplicate mount emitter ${e}`);n(),l.mounted[e]=!0}}};l.gen("click",(()=>{function e(t,n,o=0){if(o>5||!t)return;const r=t.getAttribute("click-emit");if(!r)return e(t.parentElement,n,o+1);const i=r.split(":")[0];let a=r.split(":").slice(1).join(":");if("?"===a[0]){const e={};a.slice(1).split("&").forEach((t=>{const[n,o]=t.split("=");""!==n&&(e[n]=o)})),a=e}s.next(i,a,{target:t,domEvent:n})}window.document.body.addEventListener("click",(t=>{e(t.target,t)})),t.info("emiter: Click emiter mounted")}));const d=l,c={notes:[],call:{move:(()=>{const e={lock:!1,handle:null,execute:(t,...n)=>{e.handle=t,e.lock||(e.lock=!0,window.requestAnimationFrame((()=>{e.lock=!1,e.handle(...n)})))}};return e})()},version:null,fetch:()=>{chrome.storage.local.get(["notes","version"]).then((e=>{c.notes=e.notes||[],c.version=e.version,c.render()}))},save:()=>{const e=Date.now();chrome.storage.local.set({notes:c.notes,version:e}),c.version=e,t.debug("noter: Noter save:",c.notes)},createObject:e=>{const t={msg:"",x:Math.floor(Math.random()*(holder.w_w-500)),y:Math.floor(Math.random()*(holder.w_h-250)),w:300,h:100,workspace:o.workspace,status:"default"};return Object.assign(t,e)},createElement:e=>{const{id:t,msg:n,x:o,y:r,w:i,h:a,status:s}=e,l=document.createElement("div");return l.setAttribute("id",`noteid_${t}`),l.setAttribute("class","note"),l.setAttribute("style",`transform: translate(${o}px, ${r}px)`),l.setAttribute("note-status",s||"default"),l.innerHTML=`\n    <div class="note-controls" note-move-id="${t}">\n        <div class="note-remove" click-emit="note_remove:${t}">&times;</div>\n    </div>\n    <div class="note-rainbow">\n        <div click-emit="note_mark:${t},primary"></div>\n        <div click-emit="note_mark:${t},success"></div>\n        <div click-emit="note_mark:${t},danger"></div>\n    </div>\n    <div class="note-editor"\n        contenteditable="true"\n        spellcheck="false"\n        note-editor-id="${t}"\n        style="width:${i}px;height:${a-20}px"\n    >${n}</div>`,c.handleHashtag(l),l},add:e=>{void 0===e.id&&(e.id=Date.now().toString(),c.notes.push(e)),window.note_box.appendChild(c.createElement(e))},render:(e=!0,n=+o.workspace||0)=>{e&&(window.note_box.innerHTML="");for(const e of c.notes)n===e.workspace&&c.add(e);t.debug("noter: Render note",c.notes)},handleHashtag:e=>{const t=["note"];(e.querySelector(".note-editor").innerHTML.slice(0,256).match(/#[a-z0-9_]{1,12}/gi)||[]).includes("#mono")&&t.push("note-ffm"),e.className=t.join(" ")},remove:e=>{const t=c.notes.findIndex((t=>t.id==e));c.notes.splice(t,1);const n=window[`noteid_${e}`];n.parentElement.removeChild(n),c.save()},mark:(e,t)=>{const n=c.notes.find((t=>t.id==e));n.status===t?n.status="default":n.status=t,window[`noteid_${e}`].setAttribute("note-status",n.status),c.save()},handleOnChange:({target:e,key:t})=>{const n=e.getAttribute("note-editor-id");if(n){const t=c.notes.findIndex((e=>e.id==n));if(c.notes[t].msg===e.innerHTML)return;c.handleHashtag(e.parentElement),c.notes[t].msg=e.innerHTML,c.save()}},boot:()=>{const e={resize:!1,move:!1,deltaX:0,deltaY:0};s.on("note_remove",(e=>{c.remove(e)})),s.on("note_mark",(e=>{const[t,n]=e.split(",");c.mark(t,n)})),window.note_box.addEventListener("mousedown",(t=>{if(3===t.which)return;const{target:n}=t;if(null!==n.getAttribute("note-editor-id")){const o=t.clientX,r=t.clientY,i=+n.getAttribute("note-editor-id"),a=c.notes.findIndex((e=>e.id==i)),s=c.notes[a];s.x+s.w-o<15&&s.y+s.h-r<15&&(e.resize=i)}if(null!==n.getAttribute("note-move-id")){const o=+n.getAttribute("note-move-id"),r=c.notes.findIndex((e=>e.id==o));e.deltaX=t.clientX-c.notes[r].x,e.deltaY=t.clientY-c.notes[r].y,e.move=o}})),window.addEventListener("mousemove",(t=>{!1!==e.move&&(t.preventDefault(),c.call.move.execute((()=>{const n=window[`noteid_${e.move}`];if(n){const o=Math.min(holder.w_w-20,Math.max(t.clientX-e.deltaX,0)),r=Math.min(holder.w_h-20,Math.max(t.clientY-e.deltaY,0));n.style.transform=`translate(${o}px, ${r}px)`}})))})),window.addEventListener("mouseup",(t=>{if(!1!==e.move){const n=t.clientX-e.deltaX,o=t.clientY-e.deltaY,r=c.notes.findIndex((t=>t.id==e.move));-1!==r&&(c.notes[r].x=n,c.notes[r].y=o),e.move=!1,c.save()}else if(!1!==e.resize){const t=c.notes.findIndex((t=>t.id==e.resize)),n=window["noteid_"+e.resize].offsetWidth,o=window["noteid_"+e.resize].offsetHeight;-1!==t&&(c.notes[t].w=n,c.notes[t].h=o),e.resize=!1,c.save()}})),window.note_box.addEventListener("keyup",c.handleOnChange),window.note_box.addEventListener("paste",c.handleOnChange),s.on("noter_add",(()=>{c.add(c.createObject()),c.save()})),s.on("noter_switch_workspace",(()=>{let e=+o.workspace||0;e>1?e=0:e++,window.switch_workspace_btn.innerHTML=e,o.workspace=e,c.save(),c.render()})),chrome.storage.onChanged.addListener(((e,t)=>{"local"===t&&e.notes&&e.version?.newValue>c.version&&(c.notes=e.notes.newValue,c.render())})),c.fetch()}},w=c,p={bookmarkBarElement:window.bookmark_bar,create:e=>{const{url:t,title:n,children:o}=e;return o?(setTimeout((()=>p.render(e))),""):`\n    <a class="item" href="${t}">\n        <img src="${chrome.runtime.getURL("/_favicon/")}?pageUrl=${t}">\n        <div class="title">${n}</div>\n    </a>`},createParent:e=>{const t=e.title,n=e.children.map((e=>p.create(e))).join(""),r=`${t}-${e.parentId||"root"}`;return`\n    <div class="parent ${o[`bookmark:parent:${r}`]||"open"}">\n        <div class="parent-header" data-parent-id="${r}">\n            <span class="icon icon-folder"></span>\n            <div class="label">${t}</div>\n        </div>\n        <div class="stopgrap"></div>\n        <div class="parent-childs">${n}</div>\n    </div>`},render:(e,t=!1)=>{t&&(p.bookmarkBarElement.innerHTML=""),p.bookmarkBarElement.innerHTML+=p.createParent(e)},toggleOpenParent:e=>{const t="close"===o[`bookmark:parent:${e}`]?"open":"close";o[`bookmark:parent:${e}`]=t,document.querySelector(`[data-parent-id="${e}"]`).parentNode.className=`parent ${t}`},fetch:()=>{chrome.topSites.get((e=>{p.render({children:e,title:"Most visited"},!0),chrome.bookmarks.getTree((e=>{p.render(e[0].children[0])}))}))},boot:()=>{p.bookmarkBarElement.addEventListener("click",(({target:e})=>{const t=e.getAttribute("data-parent-id")||e.parentNode.getAttribute("data-parent-id");t&&p.toggleOpenParent(t)})),chrome.bookmarks.onCreated.addListener(p.fetch),chrome.bookmarks.onRemoved.addListener(p.fetch),chrome.bookmarks.onChanged.addListener(p.fetch),chrome.bookmarks.onMoved.addListener(p.fetch),p.fetch()}},m=p,g=(e,t)=>{window.wave_click_box.innerHTML=`\n    <div class="wave active" style="transform: translate(${e}px, ${t}px)">\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>`};window.addEventListener("mouseup",(e=>{g(e.clientX,e.clientY)}));const u={isOpen:!1,blob_buffer_url:null,render:()=>{const e=Math.floor(window.settings_wallpapers.clientWidth/6-11),t=Math.floor(e*holder.w_h/holder.w_w);window.settings_wallpapers.innerHTML=Array(12).fill(1).map(((n,o)=>`\n            <div class="settings-wall-pre"\n                style="width: ${e}px; height: ${t}px; background-image: url(/img/placeholder.png)"\n            ></div>\n            `)).join(""),chrome.storage.local.get("wallpapers",(({wallpapers:n})=>{window.settings_wallpapers.innerHTML=n.map(((n,o)=>{let r="settings-wall-pre";n.active&&(r+=" active");let i="";return n.editbale&&(i+=`<span click-emit="setting_wallpaper_edit:${o}">EDIT</span>`),`\n                <div class="${r}"\n                    style="width: ${e}px; height: ${t}px; background-image: url(${n.url})"\n                    click-emit="setting_wallpaper_toggle:${o}"\n                >${i}</div>\n                `})).join("")})),window.setting_config_input.value=JSON.stringify(o.config,null,2)},toggle:e=>{void 0===e&&(e=!u.isOpen),u.isOpen=e,e?(window.setting_box.removeClass("hidden"),u.render()):window.setting_box.addClass("hidden")}};s.on("setting_close",(()=>{u.toggle(!1)})),s.on("setting_open",(()=>{u.toggle(!0)})),s.on("setting_backup",(async()=>{const e=new Date,t=await chrome.storage.local.get(),n={};n.local=t,n.storage=window.localStorage;const o=new Blob([JSON.stringify(n)],{type:"text/plain"}),r=URL.createObjectURL(o),i=document.createElement("a");i.href=r,i.download="sein-backup-"+e.toLocaleDateString().replace(/\//g,"-")+".json",i.click(),URL.revokeObjectURL(r)})),s.on("setting_restore",(()=>{const e=document.createElement("input");e.type="file",e.addEventListener("change",(()=>{const t=e.files[0],n=new FileReader;n.addEventListener("load",(async()=>{const{local:e,storage:t,notes:o}=JSON.parse(n.result);if(t)for(const e of Object.keys(t))window.localStorage[e]=t[e];e&&await chrome.storage.local.set(e),o&&(w.notes=o,w.save()),window.alert("Restore completed"),window.location.reload()})),n.readAsText(t)}),{once:!0}),e.click()})),s.on("setting_config_save",(()=>{try{const e=JSON.parse(window.setting_config_input.value);o.config=e}catch(e){return console.error(e),window.alert("Parse and save config error")}window.alert("Save config success")})),s.on("setting_wallpaper_toggle",((e,{target:t})=>{e=+e,chrome.storage.local.get("wallpapers",(({wallpapers:n})=>{const o=-1!==t.className.indexOf("active");n[e].active=!o,i.cache(n),chrome.storage.local.set({wallpapers:n}),o?t.removeClass("active"):t.addClass("active")}))})),s.on("setting_wallpaper_edit",((e,{target:t})=>{e=+e;const n=document.createElement("input");n.type="file",n.addEventListener("change",(()=>{const o=n.files[0],r=new FileReader;r.addEventListener("load",(async()=>{if(o.type.startsWith("video/")){const n=document.createElement("video"),a=document.createElement("source"),s=document.createElement("canvas"),l=s.getContext("2d");return n.className="invisible",s.className="invisible",a.setAttribute("src",r.result),a.setAttribute("type",o.type),n.appendChild(a),window.setting_box.appendChild(n),void n.addEventListener("canplaythrough",(()=>{setTimeout((async()=>{s.width=n.videoWidth,s.height=n.videoHeight,window.setting_box.appendChild(s),l.drawImage(n,0,0,n.videoWidth,n.videoHeight);const{wallpapers:o}=await chrome.storage.local.get("wallpapers"),a=s.toDataURL("image/jpeg");window.setting_box.removeChild(n),window.setting_box.removeChild(s),o[e].url=a,o[e].video=e,i.cache(o),chrome.storage.local.set({wallpapers:o,[`wallpaper_videos_${e}`]:r.result}),t.parentElement.style.backgroundImage=`url(${a})`}),200)}))}if(o.type.startsWith("image/")){const{wallpapers:n}=await chrome.storage.local.get("wallpapers");n[e].url=r.result,i.cache(n),chrome.storage.local.set({wallpapers:n,[`wallpaper_videos_${e}`]:""}),t.parentElement.style.backgroundImage=`url(${r.result})`}else alert("Only accept image or video")})),r.readAsDataURL(o)}),{once:!0}),n.click()})),window.holder={w_w:window.document.documentElement.clientWidth,w_h:window.document.documentElement.clientHeight},window.addEventListener("resize",(()=>{holder.w_w=window.document.documentElement.clientWidth,holder.w_h=window.document.documentElement.clientHeight})),i.boot(),w.boot(),m.boot(),d.click(),o.config=o.config||{log_level:"debug"},t.log_level=o.config.log_level,window.switch_workspace_btn.innerHTML=o.workspace||0})()})();